name: MERNflow Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js (Frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies for Frontend
        working-directory: ./client
        run: |
          npm install

      - name: Lint Frontend Code
        working-directory: ./client
        run: |
          npm install eslint --save-dev
          npx eslint .

      - name: Set up Node.js (Backend)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependenciess for Backend
        working-directory: ./server
        run: |
          npm install

      - name: Lint Backend Code
        working-directory: ./server
        run: |
          npm install eslint --save-dev
          npx eslint .


  dockerize-and-deploy:
    runs-on: self-hosted
    needs: build-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cleanup old Docker Containers
        run: |
          docker rm -f mf_frontend mf_backend || true

      - name: Build Images with Docker Compose
        working-directory: .
        run: docker compose build

      - name: Scan Frontend Docker Image
        run: |
          docker pull aquasec/trivy:latest
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --scanners vuln mernflow-frontend

      - name: Scan Backend Docker Image
        run: |
          docker pull aquasec/trivy:latest
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --scanners vuln mernflow-backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Frontend Docker Image
        run: |
          docker tag mernflow-frontend:latest ${{ secrets.DOCKER_USERNAME }}/mernflow-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mernflow-frontend:latest

      - name: Push Backend Docker Image
        run: |
          docker tag mernflow-backend:latest ${{ secrets.DOCKER_USERNAME }}/mernflow-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mernflow-backend:latest

      - name: Deploy on EC2
        run: |
          docker compose up -d
